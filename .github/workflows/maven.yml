# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches:
      - master
      - dev
      - staging
  pull_request:
    branches:
      - master
      - dev
      - staging

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - name: Check env variable is created
        run: |
          if [ -z "${{ env.RELEASE }}" ]; then
            echo "RELEASE=v1.0.0" >> $GITHUB_ENV
          fi
          
      - name: Check and update project version
        run: |
          STRING="${{ github.event.head_commit.message }}"
          if [[ "${{ env.STRING }}" == *"Release"* ]]; then
            echo "Contains Release"
            RELEASE_STRING="${STRING#*Release }"
            echo "RELEASE=$RELEASE_STRING" >> $GITHUB_ENV
          fi
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Deploy to dev
        run: echo "Deploying to Dev"

      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          ref: dev
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Run tests with Maven
        run: mvn test

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Deploy to staging
        run: echo "Deploying to StaginDevg"

      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          ref: staging
          java-version: '21'
          distribution: 'temurin'
          cache: maven
          
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=LucaseNogueira_service-auth

  deploy-master:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to master
        run: echo "Deploying to Master"

      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          ref: master
          java-version: '21'
          distribution: 'temurin'
          cache: maven
          
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=LucaseNogueira_service-auth
          
      - name: Docker Login
        uses: docker/login-action@v3.2.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: List files in root directory
        run: ls -al

      - name: Build and push Docker images
        uses: docker/build-push-action@v6.1.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            lucasnogueira1325/ese-auth:${{ env.RELEASE }}
            
      - name: Logout from Docker Hub
        run: docker logout
